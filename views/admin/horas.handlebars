<style>
    * {
    margin: 0 auto;
    padding: 0;
    box-sizing: border-box;
    }

    body {
        width: 100%;
        height: 110dvh;
        margin: 0 auto;
        text-align: center;
        display: flex;
        flex-direction: column;
        justify-content: start;
        align-items: center;
    }

     #imgLogo{
        width: 10rem;
        height: 5rem;
    }


    #liData{
    display: flex;
    justify-content: center !important;
    align-items: end;
    margin-right: 1rem;
    }


    #data{
    color: rgb(30, 21, 46) !important;
    display: contents;
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    #ini{
    display: none;
    }

    #home{
      display: none;
    }

    #sobre{
    display: none;
    }
    #retornarP{
        display: none;
    }

    #sair{
    display: none;
    }


    #liData{
        display: none;
    }

    .topovoltar{
        display: flex;
        margin-top: 5rem;
        width: 96%;
        height: 2rem;
        position: relative;
        justify-content: start;

        & > a {
            position: absolute;
            text-decoration: none;
            gap: 4px;
            color: #221f36;
        }

    }

    #divTotal{
        margin-top: 8dvh;
        font-family: sans-serif;
        
    }

    #logoImg{
        object-fit: contain;
        width: 21px;
        height: 21px;
        
    }

    #extratoData{
        display: flex;
        flex-direction: column;
        width: 100%;
        height: 10dvh;
        gap: 1rem;
        
    }

    #divProgressoPrincipal{
        display: flex;
        justify-content: space-evenly;
        width: 100%;
        height: 5dvh;
        margin-top: 5rem;
    }

    #divProgresso1, #divProgresso2 {
    width: 100%;
    height: 20px;
    background-color: #ddd;
    border-radius: 10px;
    overflow: hidden;
    margin-bottom: 10px;
    }

    #progresso1 {
    height: 100%;
    width: 0%;
    background-color: #4caf50; /* verde */
    border-radius: 10px;
    transition: width 1s linear;
    }

    #progresso2 {
    height: 100%;
    width: 0%;
    background-color: #2196f3; /* azul */
    border-radius: 10px;
    transition: width 1s linear;
    }


    #divBotoes{
        display: flex;
        justify-content: space-around;
        align-items: center;
        width: 100%;
        height: 8dvh;
        margin-top: 6rem;
    }

    #butonEntrada{
        border: none;
    }

    #butonIntervalo{
        border: none;
    }

    #butonSaida{
        border: none;
    }

    .botoesAcesso{
        width: 8rem;
        height: 19.4dvh;
        display: flex;
        justify-content: start;
        align-items: center;
        flex-direction: column;
        border-radius: 13px;
        border-top: none;
        box-shadow: 1px 4px 9px  #221f36;
    }

    .divIcon{
        width: 1.9rem;
        height: 2rem;
        display: flex;
        justify-content: end;
        align-items: center;
        border: 1px solid #221f36;
        border-radius: 50%;
        margin-top: -0.5rem;
        margin-bottom: 1rem;
        object-fit: contain;
        background-color: #221f36;
    }

    #divValores{
        margin-top: 10rem;
        flex-direction: column;
        width: 80%;
        min-width: 600px;
        height: 55dvh;
        
    }

    .divHoras1, .divHoras2, .divHoras3,
    .divHoras4, .divHoras5{
        display: flex;
        align-items: center;
        width: 100%;
        height: 4rem;
        border: 1px solid #b9b9b9;
        border-left: none;
        border-right: none;
        font-size: 1.2rem;
    }

    .divHoras1{
        margin-top: 4rem;
        display: flex;
        position: relative;
        & > p {
            position: absolute;
            text-decoration: none;
        }
        & > #hora1{
            font-size: 1.3rem;
            position: absolute;
            left: 90%;
            font-weight: 600;
            color: #363536;
        }
    }


     .divHoras2{
        display: flex;
        position: relative;
        & > p {
            position: absolute;
            text-decoration: none;
        }
        & > #hora2{
            font-size: 1.3rem;
            position: absolute;
            left: 90%;
            font-weight: 600;
            color: #363536;
        }
    }

    
     .divHoras3{
        display: flex;
        position: relative;
        & > p {
            position: absolute;
            text-decoration: none;
        }
        & > #hora3{
            font-size: 1.3rem;
            position: absolute;
            left: 90%;
            font-weight: 600;
            color: #363536;
        }
    }


     .divHoras4{
        display: flex;
        position: relative;
        & > p {
            position: absolute;
            text-decoration: none;
        }
        & > #hora4{
            font-size: 1.3rem;
            position: absolute;
            left: 90%;
            font-weight: 600;
            color: #363536;
        }
    }

    #somaTotal{
        font-size: 1.3rem;
            position: absolute;
            left: 71.2%;
            font-weight: 600;
            color: #363536;
    }

    #valorSalario{
        border: 1px solid  #b9b9b9;
        border-radius: 13px;
        height: 2.3rem;
        padding: 0.5rem;
    }

    .btn-tempo{
        border: none !important;
    }

    .btn-success{
        display: flex;
        margin-left: 1.5rem;
    }

    #inputHoraEntrada, #inputPausa, #inputRetorno, 
    #inputHoraSaida
    {
        margin: -0.6rem;
        width: 90%;
        height: 1rem;
        border: none;
    }


    .divGrafico{
        width: 100%;
        height: 3rem;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 5rem;
        position: relative;

        & > p {
            position: absolute;
            display: flex;
            font-size: 1.1rem;
            font-weight: 400;
        }

        & > #divTotal{
            width: 80%;
            height: 2.2rem;
            border: 1px solid #b9b9b9;
            display: flex;
            position: relative;
        }

    }

    #divCarregamento {
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 2.2rem;
        background-color: #221f36;
        color: #fff;
        font-weight: bold;
        padding: 0 10px;
        transition: width 0.5s ease-in-out;
        white-space: nowrap;
    }

    #formZerarHoras{
        width: 100%;
        height: 2rem;
        margin-top: 6rem;
        position: relative;
        display: flex !important;
        flex-direction: column;

        & > .btn-danger{
            position: absolute;
            display: flex;
            left: 48%;
        }

        & > p{
            position: absolute;
            display: flex;
            left: 46%;
            margin-top: 2.5rem;
            font-family: sans-serif;
            font-weight: 700;
        }
    }

    footer{
        height: 5rem;
    }


    /*Para telas com tamanho max ate 1028*/
    @media (max-width: 1028px) {
        #divDados{
           
            font-size: 1.3rem;
        }

    }

    /*Para telas com tamanho max ate 564*/
     @media (max-width: 410px ) {
        #divDados{
            width: 106vw;
            font-size: 1.3rem;
        }

        #divTotal {
        display: flex;
        flex-direction: column;
        margin-top: 8dvh;
        font-family: sans-serif;
        width: 150vw;
        
       
    }

    #extratoData{
        gap: 1rem;
        display: flex;
    }

    #formZerarHoras{
        width: 145vw;
        height: 2rem;
        margin-top: 6rem;
        position: relative;
        display: flex !important;
        flex-direction: column;
        

        & > .btn-danger{
            position: absolute;
            display: flex;
            left: 46%;
        }

        & > p{
            position: absolute;
            display: flex;
            left: 42%;
            margin-top: 2.5rem;
            font-family: sans-serif;
            font-weight: 700;
        }
    }


    #cronometro{
        font-family: sans-serif;
        font-weight: 400;
        font-size: 1rem;
        margin-top: 1rem;
    }

    #divBotoes{
        width: 100%;
        height: 10vh;
        gap: 1rem;
    }
    .botoesAcesso {
        width: 7.6rem;
        height: 14.4dvh;
    }
    #divProgressoPrincipal {
        display: flex;
        justify-content: space-evenly;
        width: 97%;
        height: 5dvh;
        margin-top: 5rem;
    }

    .divGrafico{
        width: 100%;
        height: 3rem;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 5rem;
        position: relative;
        left: 35%;

        & > p {
            position: absolute;
            display: flex;
            font-size: 1.1rem;
            font-weight: 400;
        }

        & > #divTotal{
            width: 80%;
            height: 2.2rem;
            border: 1px solid #b9b9b9;
            display: flex;
            position: relative;
        }

    }

    }

    /*Para telas com tamanho max ate 480*/
    @media (max-width: 352px) {
      #imgLogo{
      width: 10.5rem;
      height: 5.5rem;
    }

    #divTotal {
        margin-top: 8dvh;
        font-family: sans-serif;
        width: 168vw;
    }

    #cronometro{
        font-family: sans-serif;
        font-weight: 400;
        font-size: 1rem;
    }


    .divGrafico{
        left: 49%;
    }


    #formZerarHoras{
        width: 270%;
        height: 2rem;
        margin-top: 6rem;
        position: relative;
        display: flex !important;
        flex-direction: column;

        & > .btn-danger{
            position: absolute;
            display: flex;
            left: 90%;
        }

        & > p{
            position: absolute;
            display: flex !important;
            left: 30.5%;
            margin-top: 2.5rem;
            font-family: sans-serif;
            font-weight: 700;
            font-size: 1.2rem;
        }
    }


/*Para telas com tamanho max ate 330*/
   @media (max-width: 330px ) {
        #divDados{
            width: 106vw;
            font-size: 1.3rem;
        }

        #divTotal {
        display: flex;
        flex-direction: column;
        margin-top: 8dvh;
        font-family: sans-serif;
        width: 174vw;
        
        
       
    }

    #extratoData{
        gap: 1rem;
        display: flex;
    }

    #formZerarHoras{
        width: 155vw;
        height: 2rem;
        margin-top: 6rem;
        position: relative;
        display: flex !important;
        flex-direction: column;
        

        & > .btn-danger{
            position: absolute;
            display: flex;
            left: 49%;
        }

        & > p{
            position: absolute;
            display: flex;
            left: 43%;
            margin-top: 2.5rem;
            font-family: sans-serif;
            font-weight: 700;
        }
    }


    #cronometro{
        font-family: sans-serif;
        font-weight: 400;
        font-size: 1rem;
        margin-top: 1rem;
    }

    #divBotoes{
        width: 100%;
        height: 10vh;
        gap: 1rem;
    }
    .botoesAcesso {
        width: 7.6rem;
        height: 14.4dvh;
    }
    #divProgressoPrincipal {
        display: flex;
        justify-content: space-evenly;
        width: 97%;
        height: 5dvh;
        margin-top: 5rem;
    }

    .divGrafico{
        width: 100%;
        height: 3rem;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 5rem;
        position: relative;
        left: 50%;

        & > p {
            position: absolute;
            display: flex;
            font-size: 1.1rem;
            font-weight: 400;
        }

        & > #divTotal{
            width: 80%;
            height: 2.2rem;
            border: 1px solid #b9b9b9;
            display: flex;
            position: relative;
        }

    }

    }


    /*Para telas com tamanho max ate 314*/
     @media (max-width: 314px) {
      #divDados {
      width: 158vw;
      font-size: 1.3rem;
    }

      #cardMeio {
      width: 100vw;
      display: flex;
      justify-content: space-around;
      gap: 3rem;
      margin-bottom: 7rem;
      margin-top: 2rem;
    }
      #imgLogo{
      width: 10rem;
      height: 5rem;
    }

    #divTotal {
        margin-top: 8dvh;
        font-family: sans-serif;
        width: 216vw;
    }

    #extratoData{
        gap: 1rem;
        
    }

    #cronometro{
        font-family: sans-serif;
        font-weight: 400;
        font-size: 1rem;
    }

    .divGrafico{
        width: 100%;
        height: 3rem;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 5rem;
        position: relative;
        left: 77%;

        & > p {
            position: absolute;
            display: flex;
            font-size: 1.1rem;
            font-weight: 400;
        }

        & > #divTotal{
            width: 80%;
            height: 2.2rem;
            border: 1px solid #b9b9b9;
            display: flex;
            position: relative;
        }

    }

    #formZerarHoras{
        width: 270%;
        height: 2rem;
        margin-top: 6rem;
        position: relative;
        display: flex !important;
        flex-direction: column;

        & > .btn-danger{
            position: absolute;
            display: flex;
            left: 47%;
        }

        & > p{
            position: absolute;
            display: flex;
            left: 42%;
            margin-top: 2.5rem;
            font-family: sans-serif;
            font-weight: 700;
            font-size: 1.2rem;
        }

    }


</style>

<script>
    window.onload = function () {
        console.log('Página carregada, script rodando...');
        carregarTempos();
    };
</script>

<main>

    <!--Botão para voltar para o perfil-->
    <div class="topoVoltar">
            <a href="/admin/perfil">
                <p><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
                </svg>Voltar</p>
            </a>
    </div>

    <!--Div principal-->
    <div class="container-fluid">

        <div id="divTotal">
            <div id="extratoData">
                <h2>Extrato de horas</h2>
                <p id="dataAtual"></p>
            </div>

            <!--Cronômetro da página-->
            <p>Tempo: <span id="cronometro">00:00:00</span></p>

            <!--Carregamento automatico da barra de horas-->
            <div id="divProgressoPrincipal">
                <div id="divProgresso1">
                    <div id="progresso1"></div>
                </div>
                <p><img src="../img/restaurante.png" alt=""></p>
                <div id="divProgresso2">
                    <div id="progresso2"></div>
                </div>
            </div>


            <!--Div dos botoes das horas-->
            <div id="divBotoes">
        
                <!--Hora atual de entrada-->
                    <div class="botoesAcesso">
                        <div class="divIcon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="white" class="bi bi-box-arrow-in-right" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0z"/>
                                <path fill-rule="evenodd" d="M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z"/>
                            </svg>
                        </div>
                        <p>Entrada</p>
                        
                        <h4><span id="horaEntrada">--:--</span></h4>
                        <input id="inputHoraEntrada" />


                       <button class="btn-tempo" data-tipo="entrada" id="btnEntrada"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-dotted" viewBox="0 0 16 16">
                            <path d="M8 0q-.264 0-.523.017l.064.998a7 7 0 0 1 .918 0l.064-.998A8 8 0 0 0 8 0M6.44.152q-.52.104-1.012.27l.321.948q.43-.147.884-.237L6.44.153zm4.132.271a8 8 0 0 0-1.011-.27l-.194.98q.453.09.884.237zm1.873.925a8 8 0 0 0-.906-.524l-.443.896q.413.205.793.459zM4.46.824q-.471.233-.905.524l.556.83a7 7 0 0 1 .793-.458zM2.725 1.985q-.394.346-.74.74l.752.66q.303-.345.648-.648zm11.29.74a8 8 0 0 0-.74-.74l-.66.752q.346.303.648.648zm1.161 1.735a8 8 0 0 0-.524-.905l-.83.556q.254.38.458.793l.896-.443zM1.348 3.555q-.292.433-.524.906l.896.443q.205-.413.459-.793zM.423 5.428a8 8 0 0 0-.27 1.011l.98.194q.09-.453.237-.884zM15.848 6.44a8 8 0 0 0-.27-1.012l-.948.321q.147.43.237.884zM.017 7.477a8 8 0 0 0 0 1.046l.998-.064a7 7 0 0 1 0-.918zM16 8a8 8 0 0 0-.017-.523l-.998.064a7 7 0 0 1 0 .918l.998.064A8 8 0 0 0 16 8M.152 9.56q.104.52.27 1.012l.948-.321a7 7 0 0 1-.237-.884l-.98.194zm15.425 1.012q.168-.493.27-1.011l-.98-.194q-.09.453-.237.884zM.824 11.54a8 8 0 0 0 .524.905l.83-.556a7 7 0 0 1-.458-.793zm13.828.905q.292-.434.524-.906l-.896-.443q-.205.413-.459.793zm-12.667.83q.346.394.74.74l.66-.752a7 7 0 0 1-.648-.648zm11.29.74q.394-.346.74-.74l-.752-.66q-.302.346-.648.648zm-1.735 1.161q.471-.233.905-.524l-.556-.83a7 7 0 0 1-.793.458zm-7.985-.524q.434.292.906.524l.443-.896a7 7 0 0 1-.793-.459zm1.873.925q.493.168 1.011.27l.194-.98a7 7 0 0 1-.884-.237zm4.132.271a8 8 0 0 0 1.012-.27l-.321-.948a7 7 0 0 1-.884.237l.194.98zm-2.083.135a8 8 0 0 0 1.046 0l-.064-.998a7 7 0 0 1-.918 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z"/>
                            </svg>
                        </button>
                    </div>
                
            
                    <!--Hora atual de pausa-->
                    <div class="botoesAcesso">
                        <div class="divIcon">
                            <img src="../img/hora-do-intervalo.png" alt="" id="logoImg" />
                        </div>
                        <p>Intervalo</p>
                        
                        <h4><span id="horaPausa">--:--</span></h4>
                        <input id="inputPausa" />
    
                        <button class="btn-tempo" data-tipo="pausa" id="btnPausa"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-dotted" viewBox="0 0 16 16">
                            <path d="M8 0q-.264 0-.523.017l.064.998a7 7 0 0 1 .918 0l.064-.998A8 8 0 0 0 8 0M6.44.152q-.52.104-1.012.27l.321.948q.43-.147.884-.237L6.44.153zm4.132.271a8 8 0 0 0-1.011-.27l-.194.98q.453.09.884.237zm1.873.925a8 8 0 0 0-.906-.524l-.443.896q.413.205.793.459zM4.46.824q-.471.233-.905.524l.556.83a7 7 0 0 1 .793-.458zM2.725 1.985q-.394.346-.74.74l.752.66q.303-.345.648-.648zm11.29.74a8 8 0 0 0-.74-.74l-.66.752q.346.303.648.648zm1.161 1.735a8 8 0 0 0-.524-.905l-.83.556q.254.38.458.793l.896-.443zM1.348 3.555q-.292.433-.524.906l.896.443q.205-.413.459-.793zM.423 5.428a8 8 0 0 0-.27 1.011l.98.194q.09-.453.237-.884zM15.848 6.44a8 8 0 0 0-.27-1.012l-.948.321q.147.43.237.884zM.017 7.477a8 8 0 0 0 0 1.046l.998-.064a7 7 0 0 1 0-.918zM16 8a8 8 0 0 0-.017-.523l-.998.064a7 7 0 0 1 0 .918l.998.064A8 8 0 0 0 16 8M.152 9.56q.104.52.27 1.012l.948-.321a7 7 0 0 1-.237-.884l-.98.194zm15.425 1.012q.168-.493.27-1.011l-.98-.194q-.09.453-.237.884zM.824 11.54a8 8 0 0 0 .524.905l.83-.556a7 7 0 0 1-.458-.793zm13.828.905q.292-.434.524-.906l-.896-.443q-.205.413-.459.793zm-12.667.83q.346.394.74.74l.66-.752a7 7 0 0 1-.648-.648zm11.29.74q.394-.346.74-.74l-.752-.66q-.302.346-.648.648zm-1.735 1.161q.471-.233.905-.524l-.556-.83a7 7 0 0 1-.793.458zm-7.985-.524q.434.292.906.524l.443-.896a7 7 0 0 1-.793-.459zm1.873.925q.493.168 1.011.27l.194-.98a7 7 0 0 1-.884-.237zm4.132.271a8 8 0 0 0 1.012-.27l-.321-.948a7 7 0 0 1-.884.237l.194.98zm-2.083.135a8 8 0 0 0 1.046 0l-.064-.998a7 7 0 0 1-.918 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z"/>
                            </svg>
                        </button>
                    </div>


                    <!--Hora atual de retorno-->
                    <div class="botoesAcesso">
                        <div class="divIcon">
                            <img src="../img/hora-do-intervalo.png" alt="" id="logoImg" />
                        </div>
                        <p>Retorno</p>
                        
                        <h4><span id="horaRetorno">--:--</span></h4>
                        <input id="inputRetorno" />

                        
                        
                        <button class="btn-tempo" data-tipo="retorno" id="btnVolta"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-dotted" viewBox="0 0 16 16">
                            <path d="M8 0q-.264 0-.523.017l.064.998a7 7 0 0 1 .918 0l.064-.998A8 8 0 0 0 8 0M6.44.152q-.52.104-1.012.27l.321.948q.43-.147.884-.237L6.44.153zm4.132.271a8 8 0 0 0-1.011-.27l-.194.98q.453.09.884.237zm1.873.925a8 8 0 0 0-.906-.524l-.443.896q.413.205.793.459zM4.46.824q-.471.233-.905.524l.556.83a7 7 0 0 1 .793-.458zM2.725 1.985q-.394.346-.74.74l.752.66q.303-.345.648-.648zm11.29.74a8 8 0 0 0-.74-.74l-.66.752q.346.303.648.648zm1.161 1.735a8 8 0 0 0-.524-.905l-.83.556q.254.38.458.793l.896-.443zM1.348 3.555q-.292.433-.524.906l.896.443q.205-.413.459-.793zM.423 5.428a8 8 0 0 0-.27 1.011l.98.194q.09-.453.237-.884zM15.848 6.44a8 8 0 0 0-.27-1.012l-.948.321q.147.43.237.884zM.017 7.477a8 8 0 0 0 0 1.046l.998-.064a7 7 0 0 1 0-.918zM16 8a8 8 0 0 0-.017-.523l-.998.064a7 7 0 0 1 0 .918l.998.064A8 8 0 0 0 16 8M.152 9.56q.104.52.27 1.012l.948-.321a7 7 0 0 1-.237-.884l-.98.194zm15.425 1.012q.168-.493.27-1.011l-.98-.194q-.09.453-.237.884zM.824 11.54a8 8 0 0 0 .524.905l.83-.556a7 7 0 0 1-.458-.793zm13.828.905q.292-.434.524-.906l-.896-.443q-.205.413-.459.793zm-12.667.83q.346.394.74.74l.66-.752a7 7 0 0 1-.648-.648zm11.29.74q.394-.346.74-.74l-.752-.66q-.302.346-.648.648zm-1.735 1.161q.471-.233.905-.524l-.556-.83a7 7 0 0 1-.793.458zm-7.985-.524q.434.292.906.524l.443-.896a7 7 0 0 1-.793-.459zm1.873.925q.493.168 1.011.27l.194-.98a7 7 0 0 1-.884-.237zm4.132.271a8 8 0 0 0 1.012-.27l-.321-.948a7 7 0 0 1-.884.237l.194.98zm-2.083.135a8 8 0 0 0 1.046 0l-.064-.998a7 7 0 0 1-.918 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z"/>
                            </svg>
                        </button>
                    </div>


                    <!--Hora atual de saida-->
                    <div class="botoesAcesso">
                        <div class="divIcon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="white" class="bi bi-box-arrow-right" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0z"/>
                                <path fill-rule="evenodd" d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z"/>
                            </svg>
                        </div>
                        <p>Saída</p>
                        
                        <h4><span id="horaSaida">--:--</span></h4>
                        <input id="inputHoraSaida" />

                        <button class="btn-tempo" data-tipo="saida" id="btnSaida"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-dotted" viewBox="0 0 16 16">
                            <path d="M8 0q-.264 0-.523.017l.064.998a7 7 0 0 1 .918 0l.064-.998A8 8 0 0 0 8 0M6.44.152q-.52.104-1.012.27l.321.948q.43-.147.884-.237L6.44.153zm4.132.271a8 8 0 0 0-1.011-.27l-.194.98q.453.09.884.237zm1.873.925a8 8 0 0 0-.906-.524l-.443.896q.413.205.793.459zM4.46.824q-.471.233-.905.524l.556.83a7 7 0 0 1 .793-.458zM2.725 1.985q-.394.346-.74.74l.752.66q.303-.345.648-.648zm11.29.74a8 8 0 0 0-.74-.74l-.66.752q.346.303.648.648zm1.161 1.735a8 8 0 0 0-.524-.905l-.83.556q.254.38.458.793l.896-.443zM1.348 3.555q-.292.433-.524.906l.896.443q.205-.413.459-.793zM.423 5.428a8 8 0 0 0-.27 1.011l.98.194q.09-.453.237-.884zM15.848 6.44a8 8 0 0 0-.27-1.012l-.948.321q.147.43.237.884zM.017 7.477a8 8 0 0 0 0 1.046l.998-.064a7 7 0 0 1 0-.918zM16 8a8 8 0 0 0-.017-.523l-.998.064a7 7 0 0 1 0 .918l.998.064A8 8 0 0 0 16 8M.152 9.56q.104.52.27 1.012l.948-.321a7 7 0 0 1-.237-.884l-.98.194zm15.425 1.012q.168-.493.27-1.011l-.98-.194q-.09.453-.237.884zM.824 11.54a8 8 0 0 0 .524.905l.83-.556a7 7 0 0 1-.458-.793zm13.828.905q.292-.434.524-.906l-.896-.443q-.205.413-.459.793zm-12.667.83q.346.394.74.74l.66-.752a7 7 0 0 1-.648-.648zm11.29.74q.394-.346.74-.74l-.752-.66q-.302.346-.648.648zm-1.735 1.161q.471-.233.905-.524l-.556-.83a7 7 0 0 1-.793.458zm-7.985-.524q.434.292.906.524l.443-.896a7 7 0 0 1-.793-.459zm1.873.925q.493.168 1.011.27l.194-.98a7 7 0 0 1-.884-.237zm4.132.271a8 8 0 0 0 1.012-.27l-.321-.948a7 7 0 0 1-.884.237l.194.98zm-2.083.135a8 8 0 0 0 1.046 0l-.064-.998a7 7 0 0 1-.918 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z"/>
                            </svg>
                        </button>

                    </div>
                

            </div>

            
        </div>

        <!--<button id="limparHorasBtn">Limpar Banco de Horas</button>-->
        <div class="container-fluid" id="butonNone">
            <form id="formZerarHoras" method="POST">
                <button type="submit" class="btn btn-danger">
                    <img src="../img/x-circle-fill.svg" alt="">
                </button>
                <p>Zerar Horas</p>
            </form>
        </div>


        <!--Div com os dados-->
        <div id="divValores">
            <h2>Totalização</h2>
            <div class="divHoras1">
                <p><a href="" style="text-decoration: none; color:#000000">Horas trabalhadas</a></p>
                <p id="hora1"><span id="totalHoarasTrabalhadas">00:00</span></p>
            </div>
            <div class="divHoras2">
                <p><a href="" style="text-decoration: none; color:#000000">Horas Extras</a></p>
                <p id="hora2"><span id="horaExtra">00:00</span></p>
            </div>
            <div class="divHoras3">
                <p><a href="" style="text-decoration: none; color:#000000">Horas Faltas</a></p>
                <p id="hora3"><span id="horaFalta">00:00</span></p>
            </div>
            <div class="divHoras4">
                <p><a href="" style="text-decoration: none; color:#000000">Banco de Horas</a></p>
                <p id="hora4"><span id="totalTrabalhado">00:00</span></p>
            </div> 
            <div class="divHoras5">
                <input type="number" id="valorSalario" placeholder="Digite seu salário">
                <button onclick="somando(horasExtrasGlobais)" class="btn btn-success">Somar</button>
                <p id="somaTotal"></p>
            </div> 
        </div>

    </div>
</main>


<!--Rodapé da página-->
<footer class="container">
        <div class="divGrafico">
            <p>Banco de Horas</p>
            <div id="divTotal">
                <div id="divCarregamento"></div>
            </div>
        </div>
</footer>


<!--Script para ver a data -->
<script>
    document.addEventListener("DOMContentLoaded", function() {
        const dataElemento = document.getElementById('dataAtual');
        const butonZerarHoras = document.getElementById('butonNone')

        if (dataElemento) { // Verifica se o elemento existe no DOM
            const dataAtual = new Date();
            const dataFormatada = dataAtual.toLocaleDateString('pt-BR', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric'
            });

            dataElemento.innerText = dataFormatada;

           const dia = dataAtual.getDate(); // Pega o número do dia

        if (dia === 30 || dia === 31) {
            alert('Data final: botão será exibido!');
            butonZerarHoras.style.display = 'block'; // ou 'inline-block'
        } else {
            console.log('Dia comum: botão será escondido. ' + dia);
            butonZerarHoras.style.display = 'none';
        }

    } else {
        console.error("Elemento #dataAtual não encontrado.");
    }
    });

    function preencherHora(tipo) {
    const dataAtual = new Date();
    const horaFormatada = dataAtual.toLocaleTimeString('pt-BR', {
        hour: '2-digit',
        minute: '2-digit'
    });

    switch (tipo) {
        case 'entrada':
            document.getElementById('inputHoraEntrada').value = horaFormatada;
            break;
        case 'pausa':
            document.getElementById('inputPausa').value = horaFormatada;
            break;
        case 'retorno':
            document.getElementById('inputRetorno').value = horaFormatada;
            break;
        case 'saida':
            document.getElementById('inputHoraSaida').value = horaFormatada;
            break;
    }
}



</script>

<!--Script para dados das horas-->
<script>
document.querySelectorAll('.btn-tempo').forEach(botao => {
    //Função para salvar as horas de cada botão
    botao.addEventListener('click', async () => {
        const tipo = botao.getAttribute('data-tipo');

        const dataAtual = new Date();
        const horaFormatada = dataAtual.toLocaleTimeString('pt-BR', {
            hour: '2-digit',
            minute: '2-digit'
        });

        // Preencher o campo correspondente
        const inputId = {
            entrada: 'inputHoraEntrada',
            pausa: 'inputPausa',
            retorno: 'inputRetorno',
            saida: 'inputHoraSaida'
        }[tipo];

        if (inputId) {
            document.getElementById(inputId).value = horaFormatada;
        }

        // Enviar pro servidor
        try {
            const resposta = await fetch('/admin/salvar-tempo', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ tipo })
            });

            if (!resposta.ok) throw new Error('Erro ao salvar tempo');

            const dados = await resposta.json();
            console.log('Tempo salvo:', dados);

            location.reload();
        } catch (error) {
            console.error('Erro ao salvar hora:', error);
        }


    });
});

// Declare fora da função:
let horasExtrasGlobais = 0;

async function carregarTempos() {
  try {
    const res = await fetch('/admin/carregar-tempos');
    const data = await res.json();

    const horasExtras = parseFloat(data.horaExtra);
    horasExtrasGlobais = horasExtras; // salva para usar no clique

    const mapa = {
      horaEntrada: 'horaEntrada',
      horaPausa: 'horaPausa',
      horaRetorno: 'horaRetorno',
      horaSaida: 'horaSaida'
    };

    // Preenche os horários
    Object.entries(mapa).forEach(([campo, id]) => {
      const el = document.getElementById(id);
      if (el && data[campo]) {
        const hora = new Date(data[campo]).toLocaleTimeString('pt-BR', {
          hour: '2-digit',
          minute: '2-digit'
        });
        el.textContent = hora;
      }
    });

    // Função para formatar decimal para HH:mm
    function formatarDecimalParaHorasMinutos(decimal) {
      if (typeof decimal !== 'number' || isNaN(decimal)) return '00:00';

      const horas = Math.floor(decimal);
      const minutos = Math.round((decimal - horas) * 60);

      const horasStr = horas.toString().padStart(2, '0');
      const minutosStr = minutos.toString().padStart(2, '0');

      return `${horasStr}:${minutosStr}`;
    }

    // Preenche os totais, extras e faltas
    if (data.total !== undefined) {
      const total = data.total || 0;
      const extra = data.horaExtra || 0;
      const falta = data.horaFalta || 0;

      preencherBarraHorasExtras(extra);

      
      document.getElementById('totalHoarasTrabalhadas').textContent = formatarDecimalParaHorasMinutos(total);
      document.getElementById('totalTrabalhado').textContent = formatarDecimalParaHorasMinutos(total);
      document.getElementById('horaExtra').textContent = formatarDecimalParaHorasMinutos(extra);
      document.getElementById('horaFalta').textContent = formatarDecimalParaHorasMinutos(falta);
    }


    // Função para iniciar o cronômetro
    function iniciarCronometro(desde) {
      const tempoInicial = new Date(desde);
      const elemento = document.getElementById('cronometro');

      if (!elemento) return;

      setInterval(() => {
        const agora = new Date();
        const diffMs = agora - tempoInicial;

        const diffSegundos = Math.floor(diffMs / 1000);
        const h = String(Math.floor(diffSegundos / 3600)).padStart(2, '0');
        const m = String(Math.floor((diffSegundos % 3600) / 60)).padStart(2, '0');
        const s = String(diffSegundos % 60).padStart(2, '0');

        elemento.textContent = `${h}:${m}:${s}`;
      }, 1000);
    }

    
    // Inicia o cronômetro com base na hora mais recente registrada
    if (data.horaEntrada && !data.horaSaida) {
    if (data.horaRetorno && !data.horaSaida) {
        iniciarCronometro(data.horaRetorno); // Após retorno, contar tempo de trabalho
    } else if (data.horaEntrada && !data.horaPausa) {
        iniciarCronometro(data.horaEntrada); // Início do expediente
    }
    }


  } catch (err) {
    console.error('Erro ao carregar horas:', err);
  }
}


 //Função para calcular hora extra      
 function somando(horasExtras) {
    // Mostra no console o valor de horas extras recebido (útil para depuração)
    console.log("Horas extras recebidas:", horasExtras);

    // Seleciona o elemento onde será exibido o resultado final
    const valorSomado = document.getElementById('somaTotal');

    // Pega o valor do input de salário, convertendo para número (float)
    const input = parseFloat(document.getElementById('valorSalario').value);

    if (isNaN(horasExtras) || isNaN(input)) {
        alert("Valores inválidos. Verifique os dados inseridos.");
        return;
    }

    /*
      Calcula o valor total com horas extras:
      - input / 220: valor de 1 hora de trabalho (considerando 220 horas mensais)
      - ((input / 220) * 1.5 * horasExtras): valor das horas extras (com 50% de adicional)
    */
    const somaValores = (input / 220) + ((input / 220) * 1.5 * horasExtras);

    // Mostra o valor total com 2 casas decimais em um alerta
    //alert('O valor é: ' + somaValores.toFixed(2));

    // Exibe o resultado na página, dentro da div com id "somaTotal"
    valorSomado.innerText = "Valor: " + somaValores.toFixed(2) + " R$";

    // Limpa o campo de input após o cálculo
    document.getElementById('valorSalario').value = "";
}





// Roda quando a página estiver pronta
document.addEventListener('DOMContentLoaded', () => {
  carregarTempos();
});

function preencherBarraHorasExtras(horasExtras) {
  const maxHorasExtras = 8; // valor máximo da barra
  const percentual = Math.min((horasExtras / maxHorasExtras) * 100, 100);

  const barra = document.getElementById('divCarregamento');
  barra.style.width = `${percentual}%`;
  barra.textContent = `${horasExtras.toFixed(2)}h`;
}



document.addEventListener("DOMContentLoaded", function () {
    const spansBase = {
        entrada: document.getElementById("horaEntrada"),
        pausa: document.getElementById("horaPausa"),
        volta: document.getElementById("horaRetorno"),
        saida: document.getElementById("horaSaida")
    };


    let currentInterval = null;

    function parseTimeToDate(horaString) {
        const [h, m, s] = horaString.split(":").map(Number);
        const data = new Date();
        data.setHours(h, m, s, 0);
        return data;
    }

    function iniciarCronometro(tipo) {
        if (currentInterval) clearInterval(currentInterval);

        const baseHora = spansBase[tipo].textContent.trim();
        const baseDate = parseTimeToDate(baseHora);

        currentInterval = setInterval(() => {
            const agora = new Date();
            const diff = agora - baseDate;

            if (diff < 0) return; // ainda não chegou na hora base

            const h = String(Math.floor(diff / 3600000)).padStart(2, '0');
            const m = String(Math.floor((diff % 3600000) / 60000)).padStart(2, '0');
            const s = String(Math.floor((diff % 60000) / 1000)).padStart(2, '0');

            spansCrono[tipo].textContent = `${h}:${m}:${s}`;
        }, 1000);

        localStorage.setItem("cronometroAtivo", tipo);
    }

    // Botões
    document.getElementById("btnEntrada").addEventListener("click", () => iniciarCronometro("entrada"));
    document.getElementById("btnPausa").addEventListener("click", () => iniciarCronometro("pausa"));
    document.getElementById("btnVolta").addEventListener("click", () => iniciarCronometro("volta"));
    document.getElementById("btnSaida").addEventListener("click", () => iniciarCronometro("saida"));

    // Recuperar cronômetro ativo ao recarregar
    const ativo = localStorage.getItem("cronometroAtivo");
    if (ativo) iniciarCronometro(ativo);
});


function preencherBarraTempoReal(idBarra, horaInicio, horaFim) {
  const barra = document.getElementById(idBarra);
  if (!barra || !horaInicio || !horaFim) return;

  const inicioMS = new Date(horaInicio).getTime();
  const fimMS = new Date(horaFim).getTime();

  const totalMS = fimMS - inicioMS;

  if (totalMS <= 0) return;

  const intervalo = setInterval(() => {
    const agoraMS = new Date().getTime();
    const percorrido = agoraMS - inicioMS;
    let porcentagem = (percorrido / totalMS) * 100;

    if (porcentagem >= 100) {
      porcentagem = 100;
      clearInterval(intervalo); // para quando atingir 100%
    }

    barra.style.backgroundColor = idBarra === 'progresso1' ? '#4caf50' : '#2196f3';
    barra.style.width = `${porcentagem}%`;
  }, 1000); // atualiza a cada 1 segundo
}


// Simulando o preenchimento da barra com 100% ao clicar
document.addEventListener('DOMContentLoaded', () => {
  if (data.horaEntrada && data.horaPausa) {
    preencherBarraTempoReal('progresso1', data.horaEntrada, data.horaPausa);
  }

  if (data.horaRetorno && data.horaSaida) {
    preencherBarraTempoReal('progresso2', data.horaRetorno, data.horaSaida);
  }
});


</script>


<script>

        
</script>


<!-- Botão para limpar horas -->
<script>

  document.getElementById('formZerarHoras').addEventListener('submit', async function (e) {
    e.preventDefault();

    const confirmar = confirm("Tem certeza que deseja ZERAR TODOS os dados de horas?");
    if (!confirmar) return;

    try {
      const response = await fetch('/admin/zerarTudoHoras', {
        method: 'DELETE'
      });

      const resultado = await response.json();
      alert(resultado.mensagem);

      if (resultado.sucesso) {
        location.reload(); // recarrega a página após a exclusão
      }
    } catch (err) {
      console.error('Erro ao tentar zerar dados:', err);
      alert("Erro ao zerar os dados.");
    }
  });


</script>

